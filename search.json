[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 profrep authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/profrep.html","id":"using-profrep","dir":"Articles","previous_headings":"","what":"Using profrep","title":"profrep","text":"vignette documents common use cases patterns profrep package.","code":""},{"path":"/articles/profrep.html","id":"introduction","dir":"Articles","previous_headings":"Using profrep","what":"Introduction","title":"profrep","text":"use profrep, start lab work! described home page, one common measurements stress physiologists take blood samples corticosterone quantification stress response.","code":""},{"path":"/articles/profrep.html","id":"basic-use-from-a-csv","dir":"Articles","previous_headings":"Using profrep","what":"Basic Use: From a CSV","title":"profrep","text":"First, install package CRAN:","code":"library(profrep)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ursula K. Beattie. Maintainer, author, copyright holder. David Harris. Author, copyright holder. L. Michael Romero. Author, copyright holder. J. Michael Reed. Author, copyright holder. Zachary R. Weaver. Author, copyright holder.","code":""},{"path":[]},{"path":"/index.html","id":"profrep","dir":"","previous_headings":"","what":"An R package for profile repeatability calculation","title":"An R package for profile repeatability calculation","text":"goal profrep calculate individual profile repeatability (Reed et al., 2019). One common measurements stress physiologists take blood samples corticosterone quantification stress response. typically includes sample baseline (<3 minutes stressor onset), one stress-induced samples (e.g. 30 minutes stressor onset), potentially negative feedback sample (e.g. 120 minutes stressor onset /dexamethasone injection). time series called “stress response curves” may taken multiple times one individual. researchers multiple stress response curves individual, may want quantify repeatability investigate, example, heritibility. current standard field use linear mixed-effect models (Baugh et al. 2014; Dingemanse Dochtermann, 2013), however type repeatability estimate can done populations one timepoint time. Reed et al. (2019) proposed “Profile Repeatability,” uses full stress response curve (across time) estimate repeatability individuals. ‘profrep’ R package computing profile repeatability number individuals, number timepoints, number replicate stress resposne curves. full explanation math behind Profile Repeatability can found Reed et al. (2019).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for profile repeatability calculation","text":"can install development version profrep GitHub using devtools : can install stable version profrep CRAN : Alternatively, one using use_this package, profrep can installed :","code":"# install.packages(\"devtools\") devtools::install_github(\"ubeattie/profrep\") install.packages(\"profrep\") usethis::use_package(\"profrep\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R package for profile repeatability calculation","text":"common use pattern profrep load data data frame active session, pass main profrep function. , load example data set provided profrep package: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy .","code":"library(profrep)  my_data <- profrep::synthetic_data_four_point n_trials <- 4  # or however many trials/rows of data per individual exist  profrep::profrep(df=my_data, n_trials=n_trials) #> Welcome to profrep! #> Number of columns in input dataframe: 6 #> Number of individuals: 11 #> Number of replicates: 4 #> Separating dataframe into frames for individual animals. #> Scoring each set of data per animal. #> Ordering by score. #> Final Rank Order (by individual name) #> G F E I H D J C B K A  #> ____________ summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"An R package for profile repeatability calculation","text":"Baugh , Oers K van, Dingemanse NJ, Hau M. Baseline stress-induced glucocorticoid concentrations repeatable covary within individual great tits (Parus major). Gen Comp Endocrinol [Internet]. 2014;208:154–63. Available : http://dx.doi.org/10.1016/j.ygcen.2014.08.014 Dingemanse NJ, Dochtermann NA. Quantifying individual variation behaviour: Mixed-effect modelling approaches. J Anim Ecol. 2013;82:39–54. Reed JM, Harris DR, Romero LM. Profile repeatability: new method evaluating repeatability individual hormone response profiles. Gen Comp Endocrinol. 2019;270:1–9.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"An R package for profile repeatability calculation","text":"MIT License","code":""},{"path":"/reference/calculate_crossovers.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Number of Crossovers in a Dataset — calculate_crossovers","title":"Calculate the Number of Crossovers in a Dataset — calculate_crossovers","text":"function calculates number crossovers dataset comparing values replicates across multiple trials. assumes missing values (NAs) interpolated using clean_data function.","code":""},{"path":"/reference/calculate_crossovers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Number of Crossovers in a Dataset — calculate_crossovers","text":"","code":"calculate_crossovers(individual_df, n_trials, n_replicates)"},{"path":"/reference/calculate_crossovers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Number of Crossovers in a Dataset — calculate_crossovers","text":"individual_df data frame containing individual dataset. n_trials total number trials dataset (number rows) n_replicates total number replicates trial (number columns - 2)","code":""},{"path":"/reference/calculate_crossovers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Number of Crossovers in a Dataset — calculate_crossovers","text":"number crossovers detected dataset.","code":""},{"path":[]},{"path":"/reference/calculate_crossovers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Number of Crossovers in a Dataset — calculate_crossovers","text":"","code":"# Example usage: data <- matrix(    c(      1, 60, 1, 2, 3, 4, 5,   # No NA values      1, 90, 9, NA, 4, NA, 2,  # NA Values in row      1, 120, 3, 6, NA, NA, 9  # Consecutive NA values     ),     nrow = 3,     byrow=TRUE ) n_trials <- nrow(data) n_replicates <- ncol(data) - 2 crossovers <- calculate_crossovers(data, n_trials, n_replicates) cat(\"Number of crossovers:\", crossovers, \"\\n\") #> Number of crossovers: 20"},{"path":"/reference/clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Data by Interpolating Missing Values — clean_data","title":"Clean Data by Interpolating Missing Values — clean_data","text":"function cleans dataset interpolating missing values replicate columns row using neighboring values.","code":""},{"path":"/reference/clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Data by Interpolating Missing Values — clean_data","text":"","code":"clean_data(data, n_trials, n_replicates)"},{"path":"/reference/clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Data by Interpolating Missing Values — clean_data","text":"data data frame containing dataset cleaned. n_trials total number rows dataset. n_replicates total number replicate columns row.","code":""},{"path":"/reference/clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Data by Interpolating Missing Values — clean_data","text":"cleaned data frame missing values interpolated.","code":""},{"path":[]},{"path":"/reference/clean_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Data by Interpolating Missing Values — clean_data","text":"","code":"# Example usage: my_data <- matrix(    c(      1, 60, 1, 2, 3, 4, 5,   # No NA values      1, 90, 9, NA, 4, NA, 2,  # NA Values in row      1, 120, 3, 6, NA, NA, 9  # Consecutive NA values     ),     nrow = 3,     byrow=TRUE  ) cleaned_data <- clean_data(my_data, n_trials = 3, n_replicates = 5)"},{"path":"/reference/do_ordering.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs the ordering of input data by scoring each individual data frame. — do_ordering","title":"Performs the ordering of input data by scoring each individual data frame. — do_ordering","text":"Performs ordering input data scoring individual data frame.","code":""},{"path":"/reference/do_ordering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs the ordering of input data by scoring each individual data frame. — do_ordering","text":"","code":"do_ordering(n_trials, id_list, df_list, n_replicates)"},{"path":"/reference/do_ordering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs the ordering of input data by scoring each individual data frame. — do_ordering","text":"n_trials number trials per individual (number rows per individual dataframe) id_list list unique individual names df_list list dataframe per unique individual n_replicates number replicates individual","code":""},{"path":"/reference/example_two_point_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data: Two Point Data — example_two_point_data","title":"Example Data: Two Point Data — example_two_point_data","text":"example data one perform profile repeatability . Consists 9 individual animals, data taken 2 times (n_trials = 2). , 28 replicate columns.","code":""},{"path":"/reference/example_two_point_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data: Two Point Data — example_two_point_data","text":"","code":"example_two_point_data"},{"path":[]},{"path":"/reference/example_two_point_data.html","id":"example-two-point-data","dir":"Reference","previous_headings":"","what":"example_two_point_data","title":"Example Data: Two Point Data — example_two_point_data","text":"dataframe 10 rows 30 columns: Animal animal name/unique identifier Time time measurement, days. SD.DR name replicate column.","code":""},{"path":"/reference/example_two_point_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data: Two Point Data — example_two_point_data","text":"experiment run Tufts University Ursula K. Beattie","code":""},{"path":"/reference/find_next_good_datapoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the next good data point in a list of data. — find_next_good_datapoint","title":"Find the next good data point in a list of data. — find_next_good_datapoint","text":"Given data row, index, number replicates (number elements row), function finds next good data point row.","code":""},{"path":"/reference/find_next_good_datapoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the next good data point in a list of data. — find_next_good_datapoint","text":"","code":"find_next_good_datapoint(data_row, index, n_replicates)"},{"path":"/reference/find_next_good_datapoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the next good data point in a list of data. — find_next_good_datapoint","text":"data_row numeric vector representing data row. index index current data point. n_replicates total number replicates (length row)","code":""},{"path":"/reference/find_next_good_datapoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the next good data point in a list of data. — find_next_good_datapoint","text":"next good data point -999 none found.","code":""},{"path":"/reference/find_next_good_datapoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the next good data point in a list of data. — find_next_good_datapoint","text":"good data point non-missing value (NA) non-empty string.","code":""},{"path":"/reference/find_next_good_datapoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the next good data point in a list of data. — find_next_good_datapoint","text":"","code":"data_row <- c(NA, 3, 2, NA, 5) index <- 1 n_replicates <- 5 find_next_good_datapoint(data_row, index, n_replicates) # expect 3 #> [1] 3"},{"path":"/reference/get_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the variances of the groups — get_vars","title":"Calculates the variances of the groups — get_vars","text":"given individual , given time, computes variance values replicates.","code":""},{"path":"/reference/get_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the variances of the groups — get_vars","text":"","code":"get_vars(individual_array, n_replicates)"},{"path":"/reference/get_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the variances of the groups — get_vars","text":"individual_array array data individual n_replicates number replicate groups","code":""},{"path":"/reference/get_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the variances of the groups — get_vars","text":"list, elements :","code":"1. variances: A vector of the variances of the sample      2. total_sum: The sum of all the measurements in the sample      3. ssq: The sum of all the squares of the measurements in the sample      4. num_measurements: The total number of measurements in the sample that are not null"},{"path":"/reference/get_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the variances of the groups — get_vars","text":"Returns variances, sum values (times replicates), sum values squared, number values. Change: instead passing , individuals -> individual whatever calls function individuals ","code":""},{"path":"/reference/profrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform profile repeatability on a data-frame — profrep","title":"Perform profile repeatability on a data-frame — profrep","text":"Perform profile repeatability data-frame","code":""},{"path":"/reference/profrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform profile repeatability on a data-frame — profrep","text":"","code":"profrep(df, n_trials)"},{"path":"/reference/profrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform profile repeatability on a data-frame — profrep","text":"df data frame Column 1 animal, column 2 time, rest data n_trials number rows individual animal .","code":""},{"path":"/reference/profrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform profile repeatability on a data-frame — profrep","text":"return object, prints summary profile repeatability measure data. TODO: Change return dataframe.","code":""},{"path":"/reference/retrieve_good_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Indices of Non-Missing Data for a Specific Time Point — retrieve_good_data","title":"Retrieve Indices of Non-Missing Data for a Specific Time Point — retrieve_good_data","text":"function retrieves indices non-missing data values specific time point individual array.","code":""},{"path":"/reference/retrieve_good_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Indices of Non-Missing Data for a Specific Time Point — retrieve_good_data","text":"","code":"retrieve_good_data(individual_array, t, n_replicates)"},{"path":"/reference/retrieve_good_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Indices of Non-Missing Data for a Specific Time Point — retrieve_good_data","text":"individual_array data matrix data frame representing individual data, rows correspond time points columns correspond replicates variables. t time point want retrieve non-missing data indices. n_replicates number replicates data matrix.","code":""},{"path":"/reference/retrieve_good_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Indices of Non-Missing Data for a Specific Time Point — retrieve_good_data","text":"numeric vector containing indices non-missing data values specified time point t. non-missing values one non-missing value, NULL returned.","code":""},{"path":[]},{"path":"/reference/retrieve_good_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Indices of Non-Missing Data for a Specific Time Point — retrieve_good_data","text":"","code":"# Example usage: individual_data <- matrix(c(NA, 2, NA, 4, 5, NA), nrow = 1) retrieve_good_data(individual_data, t = 1, n_replicates = 3) #> [1] 2 3"},{"path":"/reference/score_individual_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Score an Individual Data Frame — score_individual_df","title":"Score an Individual Data Frame — score_individual_df","text":"function calculates score individual data frame based various factors, including number crossovers, maximum variance, set variances.","code":""},{"path":"/reference/score_individual_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score an Individual Data Frame — score_individual_df","text":"","code":"score_individual_df(   individual_df,   n_trials,   n_replicates,   max_variance,   variance_set )"},{"path":"/reference/score_individual_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score an Individual Data Frame — score_individual_df","text":"individual_df data frame containing individual data. n_trials total number trials data frame. n_replicates total number replicates trial. max_variance maximum allowed variance value. variance_set vector variance values.","code":""},{"path":"/reference/score_individual_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score an Individual Data Frame — score_individual_df","text":"score calculated individual data frame.","code":""},{"path":"/reference/score_individual_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score an Individual Data Frame — score_individual_df","text":"score computed follows: factors number crossovers using scaling factor. considers maximum variance value variance set. adds component based average variance values. includes scaled component number crossovers.","code":""},{"path":[]},{"path":"/reference/sigmoid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the sigmoid function of the input — sigmoid","title":"Calculates the sigmoid function of the input — sigmoid","text":"Calculates sigmoid function input","code":""},{"path":"/reference/sigmoid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the sigmoid function of the input — sigmoid","text":"","code":"sigmoid(float)"},{"path":"/reference/sigmoid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the sigmoid function of the input — sigmoid","text":"float float number","code":""},{"path":"/reference/sigmoid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the sigmoid function of the input — sigmoid","text":"float number result sigmoid function","code":""},{"path":"/reference/sigmoid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the sigmoid function of the input — sigmoid","text":"","code":"sigmoid(0) #> [1] 0.5 sigmoid(2) #> [1] 0.8807971"},{"path":"/reference/sparrow_repeatability_three_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data: Sparrow Repeatability (3 Point Data) — sparrow_repeatability_three_point","title":"Example Data: Sparrow Repeatability (3 Point Data) — sparrow_repeatability_three_point","text":"example data one perform profile repeatability . Consists 12 individual animals, data taken 3 times (n_trials = 3). , 10 replicate columns. example also shows happens null data records individuals.","code":""},{"path":"/reference/sparrow_repeatability_three_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data: Sparrow Repeatability (3 Point Data) — sparrow_repeatability_three_point","text":"","code":"sparrow_repeatability_three_point"},{"path":[]},{"path":"/reference/sparrow_repeatability_three_point.html","id":"sparrow-repeatability-three-point","dir":"Reference","previous_headings":"","what":"sparrow_repeatability_three_point","title":"Example Data: Sparrow Repeatability (3 Point Data) — sparrow_repeatability_three_point","text":"dataframe 36 rows 12 columns: Animal animal name/unique identifier TIME time measurement, days LD.500 name replicate column","code":""},{"path":"/reference/sparrow_repeatability_three_point.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data: Sparrow Repeatability (3 Point Data) — sparrow_repeatability_three_point","text":"experiment run Tufts University Ursula K. Beattie","code":""},{"path":"/reference/synthetic_data_four_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data: Synthetic 4-Point Data — synthetic_data_four_point","title":"Example Data: Synthetic 4-Point Data — synthetic_data_four_point","text":"example data one perform profile repeatability . data synthetic data created testing purposes. Consists 11 individual animals, data taken 4 times (n_trials = 4). , four replicate columns. Replicate column names refer sample tests performed animal.","code":""},{"path":"/reference/synthetic_data_four_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data: Synthetic 4-Point Data — synthetic_data_four_point","text":"","code":"synthetic_data_four_point"},{"path":[]},{"path":"/reference/synthetic_data_four_point.html","id":"synthetic-data-four-point","dir":"Reference","previous_headings":"","what":"synthetic_data_four_point","title":"Example Data: Synthetic 4-Point Data — synthetic_data_four_point","text":"dataframe 44 rows 6 columns: Animal animal name/unique identifier TIME time measurement (unit important) (unimportant) name replicate column. B (unimportant) name replicate column. C (unimportant) name replicate column. D (unimportant) name replicate column.","code":""},{"path":"/reference/synthetic_data_four_point.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data: Synthetic 4-Point Data — synthetic_data_four_point","text":"Data created testing purposes ","code":""},{"path":[]},{"path":"/news/index.html","id":"profrep-001","dir":"Changelog","previous_headings":"","what":"profrep 0.0.1","title":"profrep 0.0.1","text":"Initial CRAN submission.","code":""}]
